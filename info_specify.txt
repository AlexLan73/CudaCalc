# –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ spec.md –æ—Ç 09.10.2025

## ‚úÖ –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø

### 1. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ Python
- ‚ùå **–£–î–ê–õ–ï–ù–û:** FFTValidator (cuFFT) –∏–∑ C++ Tester
- ‚úÖ **–î–û–ë–ê–í–õ–ï–ù–û:** Python –≤–∞–ª–∏–¥–∞—Ç–æ—Ä —Å scipy.fft
- **–ü—Ä–∏—á–∏–Ω–∞:** –ì–∏–±–∫–æ—Å—Ç—å, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç GPU vendor, –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è

### 2. –¢—Ä–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ FFT16 –≤–º–µ—Å—Ç–æ –¥–≤—É—Ö
- –í–∞—Ä–∏–∞–Ω—Ç A: Tensor Cores (wmma) + FP16
- –í–∞—Ä–∏–∞–Ω—Ç B: –û–±—ã—á–Ω—ã–π 2D shared memory + FP32
- –í–∞—Ä–∏–∞–Ω—Ç C: cuFFT Wrapper (—ç—Ç–∞–ª–æ–Ω –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)

### 3. –ù–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞—Ç–∞–ª–æ–≥–æ–≤
```
DataContext/
‚îú‚îÄ‚îÄ Config/                     ‚≠ê –ù–û–í–û–ï
‚îÇ   ‚îú‚îÄ‚îÄ paths.json
‚îÇ   ‚îú‚îÄ‚îÄ validation_params.json
‚îÇ   ‚îî‚îÄ‚îÄ samples/
‚îú‚îÄ‚îÄ ValidationData/             ‚≠ê –ù–û–í–û–ï
‚îÇ   ‚îî‚îÄ‚îÄ FFT16/
‚îÇ       ‚îî‚îÄ‚îÄ YYYY-MM-DD_HH-MM_<algo>_test.json
‚îú‚îÄ‚îÄ Reports/
‚îî‚îÄ‚îÄ Models/
```

### 4. InputSignalData: –Ω–æ–≤–æ–µ –ø–æ–ª–µ
```cpp
struct InputSignalData {
    std::vector<std::complex<float>> signal;
    StrobeConfig config;
    bool return_for_validation;  // ‚≠ê –ù–û–í–û–ï
};
```

### 5. JSON —Ñ–æ—Ä–º–∞—Ç—ã
- **–ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ:** `Reports/YYYY-MM-DD_HH-MM_profiling.json`
- **–í–∞–ª–∏–¥–∞—Ü–∏—è:** `ValidationData/FFT16/YYYY-MM-DD_HH-MM_<algo>_test.json`
- **–í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:** –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ù–ï –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è

### 6. Python Validator –º–æ–¥—É–ª—å
```
Validator/
‚îú‚îÄ‚îÄ validate_fft.py        # –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
‚îú‚îÄ‚îÄ fft_reference.py       # scipy.fft —ç—Ç–∞–ª–æ–Ω
‚îú‚îÄ‚îÄ comparison.py          # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
‚îú‚îÄ‚îÄ visualization.py       # matplotlib (3 subplot'–∞)
‚îú‚îÄ‚îÄ requirements.txt       # numpy, scipy, matplotlib
‚îî‚îÄ‚îÄ README.md              # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
```

### 7. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è (matplotlib)
- Subplot 1: –í—Ö–æ–¥–Ω–æ–π —Å–∏–≥–Ω–∞–ª (real, imag, –æ–≥–∏–±–∞—é—â–∞—è)
- Subplot 2: GPU —Å–ø–µ–∫—Ç—Ä
- Subplot 3: GPU vs Python —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
- –î–≤–∞ —Ä–µ–∂–∏–º–∞: `--visualize` / `--no-plot`

### 8. –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π Workflow
- C++ —á–∞—Å—Ç—å: —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (upload/compute/download)
- Python —á–∞—Å—Ç—å: –≤–∞–ª–∏–¥–∞—Ü–∏—è + –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è (—Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫)

## üìã –ü–õ–ê–ù –†–ï–ê–õ–ò–ó–ê–¶–ò–ò (–æ–±–Ω–æ–≤–ª–µ–Ω)

### –§–∞–∑–∞ 1: –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (2-3 –¥–Ω—è)
- CMake
- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥—É–ª–µ–π
- –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Config/, ValidationData/, Validator/

### –§–∞–∑–∞ 2: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤ (1 –¥–µ–Ω—å)
- SignalGenerators/
- return_for_validation –≤ InputSignalData

### –§–∞–∑–∞ 3: FFT16 —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ (4-5 –¥–Ω–µ–π)
- FFT16 Shared2D
- FFT16 WMMA
- FFT16 cuFFT Wrapper

### –§–∞–∑–∞ 4: –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (2 –¥–Ω—è)
- BasicProfiler
- JSON –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (2 —Ç–∏–ø–∞)
- –í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤

### –§–∞–∑–∞ 5: Python Validator (2-3 –¥–Ω—è) ‚≠ê –ù–û–í–û–ï
- Python venv
- requirements.txt
- –í—Å–µ 4 –º–æ–¥—É–ª—è (.py)
- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ Ubuntu/Windows

### –§–∞–∑–∞ 6: ModelArchiver (1-2 –¥–Ω—è)
- –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
- –í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ v1, v2, v3

### –§–∞–∑–∞ 7: –§–∏–Ω–∞–ª (1-2 –¥–Ω—è)
- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
- –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏
- –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è

**–ò–¢–û–ì–û:** ~14-17 –¥–Ω–µ–π (–±—ã–ª–æ ~12 –¥–Ω–µ–π)

## üéØ –ö–õ–Æ–ß–ï–í–´–ï –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê

1. ‚úÖ **–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏:** Tester = –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ, Python = –≤–∞–ª–∏–¥–∞—Ü–∏—è
2. ‚úÖ **–ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç GPU:** Python —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º GPU (NVIDIA, AMD, Intel)
3. ‚úÖ **–ì–∏–±–∫–æ—Å—Ç—å:** Python –ª–µ–≥–∫–æ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ C++
4. ‚úÖ **–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è:** matplotlib –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
5. ‚úÖ **–í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:** –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è

## ‚úÖ –í–´–ü–û–õ–ù–ï–ù–û –í –¢–ï–ö–£–©–ï–ú –°–ï–ê–ù–°–ï

- [x] –û–±–Ω–æ–≤–ª–µ–Ω spec.md (1055 —Å—Ç—Ä–æ–∫)
- [x] –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ Validator/
- [x] –°–æ–∑–¥–∞–Ω—ã Python –º–æ–¥—É–ª–∏ (5 —Ñ–∞–π–ª–æ–≤)
- [x] –°–æ–∑–¥–∞–Ω requirements.txt
- [x] –°–æ–∑–¥–∞–Ω README.md —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
- [x] –°–æ–∑–¥–∞–Ω—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Config/, ValidationData/
- [x] –û–±–Ω–æ–≤–ª–µ–Ω—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
- [x] –û–±–Ω–æ–≤–ª–µ–Ω workflow
- [x] –û–±–Ω–æ–≤–ª–µ–Ω –ø–ª–∞–Ω —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏

## üìã –°–û–ó–î–ê–ù–ù–´–ï –ü–õ–ê–ù–´ –†–ê–ë–û–¢

### 1. WORK_PLAN_FULL.md (–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π)
- **–û–±—ä—ë–º:** –ü–æ–ª–Ω—ã–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∏ –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É
- **–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:**
  - –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ
  - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ü–µ–ª–∏ –∏ –º–µ—Ç—Ä–∏–∫–∏
  - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ä–µ—à–µ–Ω–∏—è (Layered, Plugin, Pipes and Filters)
  - 26+ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  - –î–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω 7 —Ñ–∞–∑
  - Gantt Chart
  - KPI –∏ –º–µ—Ç—Ä–∏–∫–∏
  - –†–∏—Å–∫–∏ –∏ –º–∏—Ç–∏–≥–∞—Ü–∏—è
  - –ö–æ–º–∞–Ω–¥–∞ –∏ —Ä–µ—Å—É—Ä—Å—ã
  
### 2. WORK_PLAN_COMPACT.md (–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π)
- **–û–±—ä—ë–º:** –ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –∫—Ä–∞—Ç–∫–∏–π –ø–ª–∞–Ω
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –†–∞–±–æ—á–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
- **–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:**
  - –¶–µ–ª–∏ –∏ –º–µ—Ç—Ä–∏–∫–∏
  - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ (–∫—Ä–∞—Ç–∫–æ)
  - –ü–ª–∞–Ω 7 —Ñ–∞–∑ (–±–µ–∑ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏)
  - –ì—Ä–∞—Ñ–∏–∫ (—Ç–∞–±–ª–∏—Ü–∞)
  - –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏—ë–º–∫–∏
  - KPI

## üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò

1. ‚úÖ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø–ª–∞–Ω–æ–≤ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É
2. üîÑ –°–æ–∑–¥–∞—Ç—å tasks.md (–¥–µ—Ç–∞–ª—å–Ω—ã–µ TODO –¥–ª—è AI)
3. üîÑ Review spec.md (–≤—ã)
4. üîÑ –ù–∞—á–∞—Ç—å –§–∞–∑—É 1 (CMake + —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
5. üîÑ PyCharm –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å (–≤—ã)
6. üîÑ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Python –≤–∞–ª–∏–¥–∞—Ç–æ—Ä
